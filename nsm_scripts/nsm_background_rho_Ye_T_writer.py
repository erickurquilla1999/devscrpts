'''
Created by Erick Urquilla, Department of Physics and Astronomy, University of Tennessee, Knoxville.
This script is used to generate an HDF5 file that contains background matter information: rho (density), Yâ‚‘ (electron fraction), and T (temperature). 
The HDF5 file generated by this script will be used as input for background matter quantities in EMU.
The data files dump_00001000.h5 and grid.h5 should be in the same directory as this script.
'''

import numpy as np
import h5py
import nsm_grid_generator
import nsm_rho_Ye_T_linear_interpolator
import time

# EMU grid parameters
ncellsx = 100 # scalar, number of cells in x-direction
ncellsy = 100 # scalar, number of cells in y-direction
ncellsz = 100 # scalar, number of cells in z-direction
xmin =  -8.0e6 #cm
xmax =  +8.0e6 #cm
ymin = -8.0e6 #cm
ymax = +8.0e6 #cm
zmin = -8.0e6 #cm
zmax = +8.0e6 #cm

# Create EMU mesh
centers, mesh = nsm_grid_generator.create_grid([ncellsx, ncellsy, ncellsz], [[xmin, xmax], [ymin, ymax], [zmin, zmax]]) # cm

start = time.time()
# Perform interpolation
indices, T_rho_Ye = nsm_rho_Ye_T_linear_interpolator.interpolate_Ye_rho_T(mesh)
end = time.time()
print(f'Interpolation time = {end - start} s')

# Create arrays to store the interpolated values of T, rho, and Ye.
rho = np.full( ( ncellsx, ncellsy, ncellsz ), 0.0 ) # array of size (ncellsx, ncellsy, ncellsz)
T = np.full( ( ncellsx, ncellsy, ncellsz ), 0.0 ) # array of size (ncellsx, ncellsy, ncellsz)
Ye = np.full( ( ncellsx, ncellsy, ncellsz ), 0.0 ) # array of size (ncellsx, ncellsy, ncellsz)

# Store the interpolated values of T, rho, and Ye.
T[indices]   = T_rho_Ye[:,0]
rho[indices] = T_rho_Ye[:,1]
Ye[indices]  = T_rho_Ye[:,2]

# Write hdf5 file with all the data
with h5py.File('rho_Ye_T.hdf5', 'w') as hdf:
    hdf.create_dataset("ncellsx", data=ncellsx)
    hdf.create_dataset("ncellsy", data=ncellsy)
    hdf.create_dataset("ncellsz", data=ncellsz)
    hdf.create_dataset("xmin_cm", data=xmin)
    hdf.create_dataset("xmax_cm", data=xmax)
    hdf.create_dataset("ymin_cm", data=ymin)
    hdf.create_dataset("ymax_cm", data=ymax)
    hdf.create_dataset("zmin_cm", data=zmin)
    hdf.create_dataset("zmax_cm", data=zmax)
    hdf.create_dataset("rho_g|ccm", data=rho)
    hdf.create_dataset("T_Mev", data=T)
    hdf.create_dataset("Ye", data=Ye)